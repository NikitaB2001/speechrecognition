import requests
import speech_recognition as sr
import pyttsx3
import datetime
import webbrowser


engine = pyttsx3.init()


recognizer = sr.Recognizer()

API_KEY = '9c36abf2e09997ac422ff31924a470e8'  


def get_weather(city):
    url = f'http://api.openweathermap.org/data/2.5/weather?q={city}&appid={API_KEY}&units=metric'
    try:
        response = requests.get(url)
        data = response.json()
        if data["cod"] != "404":
            main = data['main']
            temperature = main['temp']
            weather_desc = data['weather'][0]['description']
            result = f"The current temperature in {city} is {temperature}Â°C with {weather_desc}."
            print(result)
            engine.say(result)
            engine.runAndWait()
        else:
            print("City not found.")
            engine.say("City not found.")
            engine.runAndWait()
    except Exception as e:
        print(f"Error fetching weather data: {e}")
        engine.say("Error fetching weather data.")
        engine.runAndWait()

# current date and time
def get_date_time():
    current_time = datetime.datetime.now().strftime("%H:%M:%S")
    current_date = datetime.datetime.now().strftime("%Y-%m-%d")
    result = f"Today's date is {current_date} and the current time is {current_time}."
    print(result)
    engine.say(result)
    engine.runAndWait()

#  open Google
def open_google():
    print("Opening Google...")
    engine.say("Opening Google")
    engine.runAndWait()
    webbrowser.open("http://www.google.com")

#  record audio and recognize speech
def record_audio():
    with sr.Microphone() as source:
        print("Clearing background noise... Please wait")
        recognizer.adjust_for_ambient_noise(source, duration=1)
        print("Listening for your command...")
        recorded_audio = recognizer.listen(source)
        print("Done recording!")
    try:
        print("Transcribing the message... Please wait")
        text = recognizer.recognize_google(recorded_audio, language='en-US')
        print(f"Your message: {text}")
        return text
    except sr.UnknownValueError:
        print("Google Speech Recognition could not understand audio")
        return None
    except sr.RequestError as e:
        print(f"Could not request results from Google Speech Recognition service; {e}")
        return None

# Main function to execute all actions
def main():
    print("Please say a command")
    while True:
        command = record_audio()
        if command:
            command = command.lower()
            if "date" in command or "time" in command:
                get_date_time()
            elif "weather in" in command:
                city = command.split("weather in")[-1].strip()
                get_weather(city)
            elif "google" in command:
                open_google()
            elif "exit" in command:
                print("Exiting...")
                engine.say("Goodbye!")
                engine.runAndWait()
                break
            else:
                print("No matching command found.")


main()
